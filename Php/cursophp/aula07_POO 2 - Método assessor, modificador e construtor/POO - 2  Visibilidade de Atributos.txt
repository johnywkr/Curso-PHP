

	* VISIBILIDADE DE ATRIBUTOS *

EXISTEM 3 TIPOS DE VISIBILIDADE:

PUBLIC -> Qualquer um pode acessar.
PRIVATE-> Só pode ser alterado dentro da própria Classe.
PROTECTED-> Apenas a mãe e suas filhas podem acessar.

MAS O FOCO DESSA ANOTAÇÃO VAI SER O  " PRIVATE "   .

- Private: Com este modificador, o acesso é permitido somente dentro da classe onde ele foi declarado.
  Por padrão, é a visibilidade definida para métodos e atributos em uma classe.

ex : Se tentar instanciar um objeto de uma class que tenha atributos privados , não sera possivel visualizalo atraves
do print_r . Vai aprecer um erro dizendo que a propriedade é privada.

     Só sera possivel dentro da class onde o atributo foi declarado, atraves dos metodos 'ACESSORES E MODIFICADORES' para alterar seus valores.
     Então quando for instanciar um objeto , ai sim atraves do metodo chamado no lugar do atributo poderar ver seu valor privado. 


  * METODOS ACESSORES E MODIFICADORES *

    - get -> pegar
    - set -> enviar OU atribuir

  ->Agora com os metodos GET E SET será possivel criar funçoes onde poderemos alterar ou pegar valores de atributos 'PRIVADOS'.

  EX: 
   -> Esse comando abaixo não poderar ser executado pois o saldo é privado na sua class. Caso execute o comando sera mostrado um erro. ' erro propriedade é privada'. 
       $c1->saldo = 1000;

   -> Já esse comando abaixo tem como base uma função onde lhe permite alterar o valor do atributo privado atraves do 'set'.
      $c1->setSaldo(1000);

      Quando executar o print_r ser mostrado assim  [saldo:Conta:private] => 1000

  OBSERVAÇÃO:
    - Toda vez que eu for alterar atributos privados , tem que ser por meio dos GETs e SETs de cada atributo que nada mais é do que METODOS ESPECIAIS,
    e em seguida chamar seus metodos/funções no lugar dos atributos privados, com o setFuncao ou getFuncao..

    * O proprio vscold tem um extenção que te ajuda com isso , mas para praticar é bom fazer na mão de começo!
      Entao antes de criar suas funçoes ja crie os GETS E SETS , para utilizarem em suas funções, como parte de boa pratica.


  RESUMINDOO:
     - Todo atributo privado precisa dos metodos especiais , sendo eles os gets e sets , para manipular os dados privados.


* METODO CONSTRUTOR *
 ### FUNÇÃO __construct  ###
 
 - Um construtor permite inicializar as propriedades de um objeto na criação do objeto.

Se você criar uma função __construct(), o PHP chamará automaticamente essa função quando você criar um objeto de uma classe.
OBSERVAÇÃO: Vai aparecer um erro entre parentesses , porquer o new objeto esta esperando os paramentros criados dentro do metodo construtor.
 
  Ex: Os paramentros seria o 'Apple' e 'red' em new fruit.

      EX:     class Fruit {
                public $name;
                public $color;

                function __construct($name, $color) {
                  $this->name = $name;
                  $this->color = $color;
                }
                function get_name() {
                  return $this->name;
                }
                function get_color() {
                  return $this->color;
                }
              }

              $apple = new Fruit("Apple", "red");   
              echo $apple->get_name();
              echo "<br>";
              echo $apple->get_color();

  Portanto ao declarar uma new class, precisamos especificar os parametros.